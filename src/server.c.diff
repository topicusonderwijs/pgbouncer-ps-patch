diff --git a/src/server.c b/src/server.c
index 66b774b..1ed9e4f 100644
--- a/src/server.c
+++ b/src/server.c
@@ -228,6 +228,9 @@ static bool handle_server_work(PgSocket *server, PktHdr *pkt)
 	SBuf *sbuf = &server->sbuf;
 	PgSocket *client = server->link;
 	bool async_response = false;
+  struct List *oppl;
+  struct OutstandingParsePacket *opp = NULL;
+  bool ignore_packet = false;
 
 	Assert(!server->pool->db->admin);
 
@@ -324,16 +327,27 @@ static bool handle_server_work(PgSocket *server, PktHdr *pkt)
 		break;
 	/* chat packets */
 	case '2':		/* BindComplete */
+  // slog_info(server, "bind complete response");
+    break;
 	case '3':		/* CloseComplete */
+    ignore_packet = true;
+    // FIXME: only skip our S close statements, portal closes???
+    break;
 	case 'c':		/* CopyDone(F/B) */
 	case 'f':		/* CopyFail(F/B) */
 	case 'I':		/* EmptyQueryResponse == CommandComplete */
 	case 'V':		/* FunctionCallResponse */
 	case 'n':		/* NoData */
+    break;
 	case '1':		/* ParseComplete */
+    oppl = list_pop(&server->server_outstanding_parse_packets);
+    if (oppl) {
+      opp = container_of(oppl, struct OutstandingParsePacket, node);
+      ignore_packet = opp->ignore;
+      free(opp);
+    }
+    break;
 	case 's':		/* PortalSuspended */
-
-	/* data packets, there will be more coming */
 	case 'd':		/* CopyData(F/B) */
 	case 'D':		/* DataRow */
 	case 't':		/* ParameterDescription */
@@ -350,7 +364,10 @@ static bool handle_server_work(PgSocket *server, PktHdr *pkt)
 	} else if (client) {
 		if (client->state == CL_LOGIN) {
 			return handle_auth_query_response(client, pkt);
-		} else {
+		} else if (ignore_packet) {
+      slog_noise(server, "not forwarding packet with type '%c' from server", pkt->type);
+      sbuf_prepare_skip(sbuf, pkt->len);
+    } else {
 			sbuf_prepare_send(sbuf, &client->sbuf, pkt->len);
 
 			/* every statement (independent or in a transaction) counts as a query */
