diff --git a/src/client.c b/src/client.c
index 464d78d..4d2944c 100644
--- a/src/client.c
+++ b/src/client.c
@@ -924,6 +924,9 @@ static bool handle_client_work(PgSocket *client, PktHdr *pkt)
 {
 	SBuf *sbuf = &client->sbuf;
 	int rfq_delta = 0;
+	char ps_name[MAX_STATEMENT_NAME] = {0};
+	PgParsedPreparedStatement *ps = NULL;
+	struct PgClosePacket close_packet;
 
 	switch (pkt->type) {
 
@@ -957,10 +960,66 @@ static bool handle_client_work(PgSocket *client, PktHdr *pkt)
 	 * to buffer packets until sync or flush is sent by client
 	 */
 	case 'P':		/* Parse */
+		if (!cf_disable_prepared_statement_support) {
+			if (!inspect_parse_packet(client, pkt, ps_name))
+				return false;
+		}
+		break;
+
 	case 'E':		/* Execute */
+		break;
+
 	case 'C':		/* Close */
+		if (!cf_disable_prepared_statement_support) {
+			if (!unmarshall_close_packet(client, pkt, &close_packet))
+				return false;
+
+			if (is_close_statement_packet(&close_packet)) {
+				if (!handle_close_statement_command(client, pkt, &close_packet))
+					return false;
+
+				client->pool->stats.client_bytes += pkt->len;
+
+				/* No further processing required */
+				return true;
+			}
+		}
+		break;
+
 	case 'B':		/* Bind */
+		if (!cf_disable_prepared_statement_support) {
+			if (!inspect_bind_packet(client, pkt, ps_name))
+				return false;
+
+			if (strlen(ps_name) > 0) {
+				HASH_FIND_STR(client->ps_state.client_ps_entries, ps_name, ps);
+				if (!ps)
+				{
+					slog_error(client, "lookup failed for prepared statement '%s'", ps_name);
+					disconnect_client(client, true, "prepared statement '%s' not found", ps_name);
+					return false;
+				}
+			}
+		}
+		break;
+
 	case 'D':		/* Describe */
+		if (!cf_disable_prepared_statement_support) {
+			if (!inspect_describe_packet(client, pkt, ps_name))
+				return false;
+
+			if (strlen(ps_name) > 0) {
+				HASH_FIND_STR(client->ps_state.client_ps_entries, ps_name, ps);
+				if (!ps)
+				{
+					slog_error(client, "lookup failed for prepared statement '%s'", ps_name);
+					disconnect_client(client, true, "prepared statement '%s' not found", ps_name);
+					return false;
+				}
+			}
+		}
+		break;
+
 	case 'd':		/* CopyData(F/B) */
 		break;
 
@@ -1004,6 +1063,20 @@ static bool handle_client_work(PgSocket *client, PktHdr *pkt)
 	client->link->ready = false;
 	client->link->idle_tx = false;
 
+	if (!cf_disable_prepared_statement_support && strlen(ps_name)>0) {
+		switch (pkt->type)
+		{
+		case 'P':
+			return handle_parse_command(client, pkt, ps_name);
+
+		case 'B':
+			return handle_bind_command(client, pkt, ps_name);
+
+		case 'D':
+			return handle_describe_command(client, pkt, ps_name);
+		}
+	}
+
 	/* forward the packet */
 	sbuf_prepare_send(sbuf, &client->link->sbuf, pkt->len);
 
